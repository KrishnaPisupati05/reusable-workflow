name: Reusable Static Web App Deployment

on:
  workflow_call:
    inputs:
      app-name:
        required: true
        type: string
      environment:
        required: true
        type: string
      node-version:
        required: true
        type: string
      app-location:
        required: true
        type: string
      output-location:
        required: true
        type: string

jobs:

  validate:
    name: Validate & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Dependencies
        run: npm install
        working-directory: ${{ inputs.app-location }}

      - name: Lint Application
        run: npm run lint
        working-directory: ${{ inputs.app-location }}

      - name: Run Tests
        run: npm test
        working-directory: ${{ inputs.app-location }}

      - name: Build Application
        run: npm run build
        working-directory: ${{ inputs.app-location }}

  approve:
    name: Await Approval
    needs: validate
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Approval Message
        run: |
          ENVIRONMENT=${{ inputs.environment }}
          echo "⏳ Awaiting approval for environment: $ENVIRONMENT"

  deploy:
    name: Deploy Static Web App
    needs: [validate, approve]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Determine Slot
        id: slot
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" ]]; then
            echo "slot=production" >> $GITHUB_OUTPUT
          else
            echo "slot=staging" >> $GITHUB_OUTPUT
          fi
          echo "✅ Slot determined: ${{ steps.slot.outputs.slot }}"

      - name: Echo Slot Name
        run: | 
          echo "✅ Deploying ${{ inputs.app-name }} to slot: ${{ steps.slot.outputs.slot }}"

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ inputs.app-location }}
          output_location: ${{ inputs.output-location }}
          deployment_environment: ${{ steps.slot.outputs.slot }}
